---
apiVersion: v1
kind: Service
metadata:
  name: lgtm
  namespace: observability-backend
spec:
  selector:
    app: lgtm
  ports:
    - name: grafana
      protocol: TCP
      port: 3000
      targetPort: 3000
    - name: otel-grpc
      protocol: TCP
      port: 4317
      targetPort: 4317
    - name: otel-http
      protocol: TCP
      port: 4318
      targetPort: 4318
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lgtm
  namespace: observability-backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: lgtm
  template:
    metadata:
      labels:
        app: lgtm
    spec:
      containers:
        - name: lgtm
          image: grafana/otel-lgtm:latest
          ports:
            - containerPort: 3000
            - containerPort: 4317
            - containerPort: 4318
          readinessProbe:
            exec:
              command:
                - cat
                - /tmp/ready
      # NOTE: By default OpenShift does not allow writing the root directory.
      # Thats why the data dirs for grafana, prometheus and loki can not be
      # created and the pod never becomes ready.
      # See: https://github.com/grafana/docker-otel-lgtm/issues/132
          volumeMounts:
            - name: grafana-data
              mountPath: /otel-lgtm/grafana/data
            - name: loki-storage
              mountPath: /loki
            - name: p8s-storage
              mountPath: /data/prometheus
      volumes:
        - name: grafana-data
          emptyDir: {}
        - name: loki-storage
          emptyDir: {}
        - name: p8s-storage
          emptyDir: {}
---
apiVersion: opentelemetry.io/v1alpha1
kind: OpenTelemetryCollector
metadata:
  name: otel-daemonset
  namespace: observability-backend
spec:
  mode: daemonset
  volumeMounts:
    - mountPath: /var/log
      name: varlog
      readOnly: true
    - mountPath: /var/lib/docker/containers
      name: varlibdockercontainers
      readOnly: true
  volumes:
    - name: varlog
      hostPath:
        path: /var/log
    - name: varlibdockercontainers
      hostPath:
        path: /var/lib/docker/containers
    - name: data
      configMap:
        name: otel-collector-config
  image: ghcr.io/open-telemetry/opentelemetry-collector-releases/opentelemetry-collector-contrib:0.103.0
  config: |
    receivers:
      prometheus:
        config:
          scrape_configs:
            - job_name: 'otel-collector'
              scrape_interval: 10s
              static_configs:
                - targets: [ '0.0.0.0:8888' ]

      filelog:
        include_file_path: true
        include:
          - /var/log/pods/*/*/*.log
        operators:
          - id: container-parser
            type: container
    processors:
      attributes:
        actions:
         - action: insert
           key: log_file_name
           from_attribute: log.file.name
         - action: insert
           key: loki.attribute.labels
           value: log_file_name
      batch:
      memory_limiter:
        check_interval: 1s
        limit_percentage: 50
        spike_limit_percentage: 30
    
    exporters:
      debug:
        verbosity: basic
        #verbosity: detailed
      otlp:
        endpoint: lgtm:4317
        tls:
          insecure: true

    service: 
      pipelines:
        logs:
          receivers: [filelog]
          processors: [attributes,memory_limiter, batch ]
          exporters: [otlp]
